{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nvar Status;\n\n(function (Status) {\n  Status[\"LOADING\"] = \"loading\";\n  Status[\"SUCCESS\"] = \"success\";\n  Status[\"ERROR\"] = \"error\";\n})(Status || (Status = {}));\n\nexport const fetchItems = createAsyncThunk('items/fetchItemsStatus', async params => {\n  const {\n    filters,\n    currentPage\n  } = params;\n  const {\n    data\n  } = await axios.get(`https://6335ad248aa85b7c5d20b4d1.mockapi.io/items?page=${currentPage}&limit=4${filters}`);\n  return data;\n});\nconst initialState = {\n  itemsList: [],\n  itemType: 0,\n  itemSize: 0,\n  status: Status.LOADING\n};\nexport const itemsSlice = createSlice({\n  name: 'items',\n  initialState,\n  reducers: {\n    setItems: (state, action) => {\n      state.itemsList = action.payload;\n    },\n    setItemType: (state, action) => {\n      state.itemType = action.payload;\n    },\n    setItemSize: (state, action) => {\n      state.itemSize = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    //fetchItems status\n    builder.addCase(fetchItems.pending, state => {\n      state.status = Status.LOADING;\n      state.itemsList = [];\n    });\n    builder.addCase(fetchItems.fulfilled, (state, action) => {\n      state.itemsList = action.payload;\n      state.status = Status.SUCCESS;\n    });\n    builder.addCase(fetchItems.rejected, state => {\n      state.status = Status.ERROR;\n      state.itemsList = [];\n    });\n  }\n});\nexport const selectItemsList = state => state.items;\nexport const {\n  setItemType,\n  setItemSize,\n  setItems\n} = itemsSlice.actions;\nexport default itemsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","Status","fetchItems","params","filters","currentPage","data","get","initialState","itemsList","itemType","itemSize","status","LOADING","itemsSlice","name","reducers","setItems","state","action","payload","setItemType","setItemSize","extraReducers","builder","addCase","pending","fulfilled","SUCCESS","rejected","ERROR","selectItemsList","items","actions","reducer"],"sources":["C:/Users/bigba/Desktop/reactjs_projects/react-pizza/src/redux/slices/itemsSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { RootState } from '../store';\r\n\r\ntype ItemType = {\r\n  id: string;\r\n  imageUrl: string;\r\n  name: string;\r\n  types: number[];\r\n  sizes: number[];\r\n  price: number;\r\n  rating: number;\r\n};\r\n\r\nenum Status {\r\n  LOADING = 'loading',\r\n  SUCCESS = 'success',\r\n  ERROR = 'error',\r\n}\r\n\r\ninterface ItemsSliceType {\r\n  itemsList: ItemType[];\r\n  itemType: number;\r\n  itemSize: number;\r\n  status: Status;\r\n}\r\n\r\nexport type SearchItemsParams = {\r\n  filters: string; currentPage: string;\r\n}\r\n\r\nexport const fetchItems = createAsyncThunk<ItemType[], Record<string, string>>(\r\n  'items/fetchItemsStatus',\r\n  async (params) => {\r\n    const { filters, currentPage } = params;\r\n    const { data } = await axios.get<ItemType[]>(\r\n      `https://6335ad248aa85b7c5d20b4d1.mockapi.io/items?page=${currentPage}&limit=4${filters}`,\r\n    );\r\n\r\n    return data;\r\n  },\r\n);\r\n\r\nconst initialState: ItemsSliceType = {\r\n  itemsList: [],\r\n  itemType: 0,\r\n  itemSize: 0,\r\n  status: Status.LOADING, \r\n};\r\n\r\nexport const itemsSlice = createSlice({\r\n  name: 'items',\r\n  initialState,\r\n  reducers: {\r\n    setItems: (state, action) => {\r\n      state.itemsList = action.payload;\r\n    },\r\n    setItemType: (state, action) => {\r\n      state.itemType = action.payload;\r\n    },\r\n    setItemSize: (state, action) => {\r\n      state.itemSize = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    //fetchItems status\r\n      builder.addCase(fetchItems.pending, (state) => {\r\n        state.status = Status.LOADING;\r\n        state.itemsList = [];\r\n      });\r\n\r\n      builder.addCase(fetchItems.fulfilled, (state, action) => {\r\n        state.itemsList = action.payload;\r\n        state.status = Status.SUCCESS;\r\n      });\r\n\r\n      builder.addCase(fetchItems.rejected, (state) => {\r\n        state.status = Status.ERROR;\r\n        state.itemsList = [];\r\n      });\r\n  },\r\n});\r\n\r\nexport const selectItemsList = (state: RootState) => state.items;\r\n\r\nexport const { setItemType, setItemSize, setItems } = itemsSlice.actions;\r\n\r\nexport default itemsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAaKC,M;;WAAAA,M;EAAAA,M;EAAAA,M;EAAAA,M;GAAAA,M,KAAAA,M;;AAiBL,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CACxC,wBADwC,EAExC,MAAOI,MAAP,IAAkB;EAChB,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAA2BF,MAAjC;EACA,MAAM;IAAEG;EAAF,IAAW,MAAMN,KAAK,CAACO,GAAN,CACpB,0DAAyDF,WAAY,WAAUD,OAAQ,EADnE,CAAvB;EAIA,OAAOE,IAAP;AACD,CATuC,CAAnC;AAYP,MAAME,YAA4B,GAAG;EACnCC,SAAS,EAAE,EADwB;EAEnCC,QAAQ,EAAE,CAFyB;EAGnCC,QAAQ,EAAE,CAHyB;EAInCC,MAAM,EAAEX,MAAM,CAACY;AAJoB,CAArC;AAOA,OAAO,MAAMC,UAAU,GAAGhB,WAAW,CAAC;EACpCiB,IAAI,EAAE,OAD8B;EAEpCP,YAFoC;EAGpCQ,QAAQ,EAAE;IACRC,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC3BD,KAAK,CAACT,SAAN,GAAkBU,MAAM,CAACC,OAAzB;IACD,CAHO;IAIRC,WAAW,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;MAC9BD,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAAxB;IACD,CANO;IAORE,WAAW,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAC9BD,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACC,OAAxB;IACD;EATO,CAH0B;EAcpCG,aAAa,EAAGC,OAAD,IAAa;IAC1B;IACEA,OAAO,CAACC,OAAR,CAAgBvB,UAAU,CAACwB,OAA3B,EAAqCR,KAAD,IAAW;MAC7CA,KAAK,CAACN,MAAN,GAAeX,MAAM,CAACY,OAAtB;MACAK,KAAK,CAACT,SAAN,GAAkB,EAAlB;IACD,CAHD;IAKAe,OAAO,CAACC,OAAR,CAAgBvB,UAAU,CAACyB,SAA3B,EAAsC,CAACT,KAAD,EAAQC,MAAR,KAAmB;MACvDD,KAAK,CAACT,SAAN,GAAkBU,MAAM,CAACC,OAAzB;MACAF,KAAK,CAACN,MAAN,GAAeX,MAAM,CAAC2B,OAAtB;IACD,CAHD;IAKAJ,OAAO,CAACC,OAAR,CAAgBvB,UAAU,CAAC2B,QAA3B,EAAsCX,KAAD,IAAW;MAC9CA,KAAK,CAACN,MAAN,GAAeX,MAAM,CAAC6B,KAAtB;MACAZ,KAAK,CAACT,SAAN,GAAkB,EAAlB;IACD,CAHD;EAIH;AA9BmC,CAAD,CAA9B;AAiCP,OAAO,MAAMsB,eAAe,GAAIb,KAAD,IAAsBA,KAAK,CAACc,KAApD;AAEP,OAAO,MAAM;EAAEX,WAAF;EAAeC,WAAf;EAA4BL;AAA5B,IAAyCH,UAAU,CAACmB,OAA1D;AAEP,eAAenB,UAAU,CAACoB,OAA1B"},"metadata":{},"sourceType":"module"}