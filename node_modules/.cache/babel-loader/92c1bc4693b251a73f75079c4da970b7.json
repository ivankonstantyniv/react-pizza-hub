{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport filter from './slices/filterSlice';\nimport items from './slices/itemsSlice';\nimport cart from './slices/cartSlice';\nimport { useDispatch } from 'react-redux';\nexport const store = configureStore({\n  reducer: {\n    filter,\n    items,\n    cart\n  }\n});\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["configureStore","filter","items","cart","useDispatch","store","reducer","useAppDispatch"],"sources":["C:/Users/bigba/Desktop/reactjs_projects/react-pizza/src/redux/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport filter from './slices/filterSlice';\r\nimport items from './slices/itemsSlice';\r\nimport cart from './slices/cartSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const store = configureStore({\r\n  reducer: { filter, items, cart },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAClCM,OAAO,EAAE;IAAEL,MAAF;IAAUC,KAAV;IAAiBC;EAAjB;AADyB,CAAD,CAA5B;AAOP,OAAO,MAAMI,cAAc,GAAG;EAAA;;EAAA,OAAMH,WAAW,EAAjB;AAAA,CAAvB;;GAAMG,c;UAAuBH,W"},"metadata":{},"sourceType":"module"}